.comment {
  margin-top: 1.5rem;
  display: flex; /*avatar e o conteudo do comentario um ao lado do outro*/
  gap: 1rem;
}

.comment > img {
  width: calc(3rem);
  height: calc(3rem);
  border-radius: 8px;
}

.commentBox {
  flex: 1; /*faz com que a div ao lado do avatar ocupe o maximo de espaço possível*/
}

.commentContent {
  background: var(--gray-700);
  border-radius: 8px;
  padding: 1rem;
}

.commentContent header {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
}

/*Podemos tambem pegar o .autorAndTime Strong{display: block} e o 
.autorAndTime Time {display: block} e por um display: block para não ficarem no 
padrão inline*/
/* .autorAndTime {
  display: flex;
  flex-direction: column;
} */

.authorAndTime strong {
  display: block;
  font-size: 0.875rem;
  line-height: 1.6;
}

.authorAndTime strong {
  display: block;
  font-size: 0.75rem;
  line-height: 1.6;
  color: var(--gray-400);
}

/*A altura de um button n é definida pelo conteúdo do button. O BTN segue a altura
pelo line-height: 0 ou fonte-size:0. Da para ver isso quando o button está em focus*/
.commentContent header button {
  background: transparent;
  border: 0;
  color: var(--gray-400);
  cursor: pointer;
  line-height: 0;
  border-radius: 2px;
}

.commentContent header button:hover {
  background: var(--red-500);
}

.commentContent p {
  margin-top: 1rem;
  color: var(--gray-300)
}

.commentBox footer {
  margin-top: 1rem;
}

.commentBox footer button {
  background: transparent;
  border: 0;
  color: var(--gray-400);
  cursor: pointer;

  /*faz o icone, texto e span fiquem na mesma linha horizontal*/
  display: flex;
  align-items: center;

  border-radius: 2px;
}

.commentBox footer button:hover {
  color: var(--green-300);
}

/*todo icone importado é SVG*/
.commentBox footer button svg {
  margin-right: 0.5rem;
}

/* Antes do 20 quero por o simbolo do ponto e dar um espacamento */
.commentBox footer button span::before {
  content: "\2022"; /*simbolo html de pontinho*/
  padding: 0 0.25rem; /*n to add o padding no span, sim no elemento BEFORE*/


/*BEFORE -> funciona como se eu tivesse criando um elemento DENTRO DO SPAN
dai consigo por texto, conteudo, etc. Como se eu tivesse pondo um novo elemento
dentro do span*/
}
